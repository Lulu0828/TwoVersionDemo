apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.lulu.twoversiondemo"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix '.debug'

            // 项目里使用了自定义的View，且有自定义的属性时，需要修正一下xml命名空间里的包名
//            android.applicationVariants.all { variant ->
//                def buildType = variant.buildType
//                def encoding = java.nio.charset.StandardCharsets.UTF_8.toString()
//                if (buildType.applicationIdSuffix) {
//                    def defaultPackageId = variant.packageName.replaceAll(buildType.applicationIdSuffix,'')
//                    variant.mergeResources.doLast {
//                        def dir = file("${buildDir}/intermediates/res/merged/${variant.dirName}/layout")
//                        dir.listFiles().each { f->
//                            String content = f.getText(encoding)
//                            content = content.replaceAll("res/"+defaultPackageId, "res/"+variant.packageName)
//                            f.write(content, encoding)
//                        }
//                    }
//                }
//            }

            // 修改debug版app name
            android.applicationVariants.all { variant ->
                def buildType = variant.buildType
                def encoding = java.nio.charset.StandardCharsets.UTF_8.toString()
                if (buildType.applicationIdSuffix) {
                    variant.mergeResources.doLast {
                        def f = file("${buildDir}/intermediates/res/merged/${variant.dirName}/values/values.xml")
                        String content = f.getText(encoding)
                        content = content.replaceAll('TwoVersionDemo','TwoVersionDemoBeta')
                        f.write(content,encoding)
                    }
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}
